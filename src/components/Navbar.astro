---
import type { HTMLAttributes } from 'astro/types'
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import ThemeToggleBtn from '../components/ThemeToggleBtn.astro'
import Bars3 from 'astro-heroicons/outline/Bars3.astro'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

type NavItem = {
  name: string
  path: string
}

const tNav = t('nav')
const navItems: NavItem[] = [
  {
    name: 'presentation',
    path: '#presentation'
  },
  {
    name: 'about_me',
    path: '#about'
  },
  {
    name: 'projects',
    path: '#projects'
  },
  {
    name: 'contact_me',
    path: '#contact_me'
  }
]
---

<div class="drawer">
  <input id="drawerNavbar" type="checkbox" class="drawer-toggle" />
  <div class="drawer-content flex flex-col h-screen">
    <div class="navbar w-full shadow-md">
      <div class="navbar-start md:invisible">
        <label
          id="drawerToggleOpen"
          htmlFor="drawerNavbar"
          aria-label="open sidebar"
          class="btn btn-square btn-ghost"
        >
          <Bars3 class="w-6" />
        </label>
      </div>

      <div class="navbar-center bg-base-100">
        {
          navItems.map((item) => (
            <div class="items-cente group mx-2 flex flex-col items-center">
              <a
                href={item.path}
                key={item.path}
                class="hidden transition duration-300 md:block group-hover:font-medium"
              >
                {tNav[item.name]}
              </a>
              <span class="align-center block h-0.5 w-0 bg-yellow-500 transition-all duration-500 group-hover:w-[80%]" />
            </div>
          ))
        }
      </div>

      <div class="navbar-end text-gray-700 dark:text-gray-200">
        <ThemeToggleBtn />
      </div>
    </div>

    <slot />
  </div>

  <div class="drawer-side">
    <label
      id="drawerToggleClose"
      htmlFor="drawerNavbar"
      aria-label="close sidebar"
      class="drawer-overlay"></label>
    <ul class="menu min-h-full w-80 bg-base-100 p-3">
      <li>
        {
          navItems.map((item) => (
            <a href={item.path} key={item.path}>
              {tNav[item.name]}
            </a>
          ))
        }
      </li>
    </ul>
  </div>
</div>

<script is:inline>
  const drawerNavbar = document.getElementById('drawerNavbar')
  const drawerToggleOpen = document.getElementById('drawerToggleOpen')
  const drawerToggleClose = document.getElementById('drawerToggleClose')

  drawerToggleOpen.addEventListener('click', () => {
    drawerNavbar.checked = true
  })

  drawerToggleClose.addEventListener('click', () => {
    drawerNavbar.checked = false
  })
</script>
